//----------------
/* ADATSOROK tetszőleges fájlban: */
//----------------
NÉV;KOR;CÍM;FIZETÉS
Petra;23;Bp;525000
Péter;22;Bp;425000
Pál;38;Bp;398000
Xénia;24;Bp;623000
Pisti;19;Bp;538000


//----------------
/* Próbáld meg az ADATSOROKAT beolvasva
az adott feladatnál megírt kódodat CSAK
a TESZTESETEK assert parancsaival kiegészíteni,
majd futtatni a kódodat!
*/
//----------------


//----------------
/* TESZTESETEK az adott feladatra: */
//----------------
    //1: ki keresi a legtöbbet?
    private void feladat1() {
        String nev = "";
        assert nev.equals("Xénia") : "1. hibás válasz";
    }
    
    //2: mennyi az átlag fizetés?
    private void feladat2() {
        double atlag = 0;
        assert atlag == 501_800: "2. hibás válasz";
    }
    
    //3: mindenki budapesti?
    private void feladat3() {
        boolean mind = Math.random()<.5?true : false;
        int i = 0;
        assert mind == tue: "3. hibás válasz";
        assert i == 5 : "3. hibás progTétel"; 
    }
    
    //4: van 20 év feletti budapesti?
    private void feladat4() {
        boolean van = false;
        int i = 0;
        assert van == true: "4. hibás válasz";
        assert i == 0 : "4. hibás progTétel"; 
    }

    //5: milyen címek vannak eltárolva?
    private void feladat5() {
        assert adatSzerk1.size() == 1 : "5. hibás méret";
	assert adatSzerk1.contains("Bp") : "5. hibás adat";
    }
    
    //6: melyik címen hányan laknak?
    private void feladat6() {
        assert adatSzerk2.size() == 1 : "6. hibás méret";
	assert adatSzerk2.containsKey("Bp") : "6. hibás kulcs";
	assert adatSzerk2.get("Bp") == 5 : "6. hibás érték";
    }